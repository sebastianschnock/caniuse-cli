#!/bin/bash

DATA="/tmp/data.json"

function loadData {
	# update data.json every week
	if [ ! -f $DATA ] || test "`find /tmp/data.json -mtime +7`"; then
		wget https://github.com/Fyrd/caniuse/raw/master/data.json -O $DATA
	else
	fi
}

function findProperty {
	cat $DATA | jq -c --arg property $1 '.data[$property]'
}

function isSupportedInBrowser {

	local browser=$1
	# get supported information for browser
	shift
	local browserData=$(echo $* | jq -c --arg browser $browser '.stats[$browser]')
	
	# check every version for support
	for version in $(echo $browserData | jq 'keys | .[]')
	do
		local unquotedVersion=$(echo $version | sed -s "s/^\([\"']\)\(.*\)\1\$/\2/g")
		local isSupported=$(echo $browserData | jq --arg version $unquotedVersion '.[$version]')
		if [[ $isSupported == "\"y\"" ]]; then
			# feature is supported
			echo "true"
			return 0
		fi
	done

	# feature is not supported
	echo "false"
}

function printBrowserSupport {

	if [[ $(isSupportedInBrowser $2 $3) == "true" ]]; then
		# supported
		echo -en "\033[42m\033[1m" $1 "\033[0m" " "
	else
		# not supported
		echo -en "\033[41m\033[1m" $1 "\033[0m" " "
	fi
}

# update data.json
loadData

for propertyName in $(cat $DATA | jq -r '.data | keys | .[]' | grep $1); do
	propertyData=$(findProperty $propertyName)
	echo $propertyName
	echo $propertyData | jq '.title'
	printBrowserSupport "IE" "ie" "$propertyData"
	printBrowserSupport "FF" "firefox" "$propertyData"
	printBrowserSupport "Chrome" "chrome" "$propertyData"
	printBrowserSupport "IOS" "ios_saf" "$propertyData"
	printBrowserSupport "Android" "android" "$propertyData"
	echo
done
